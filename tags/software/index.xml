<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software on amania Tools</title><link>https://www.amania-tools.com/tags/software/</link><description>Recent content in Software on amania Tools</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 31 Dec 2022 15:14:55 +0900</lastBuildDate><atom:link href="https://www.amania-tools.com/tags/software/index.xml" rel="self" type="application/rss+xml"/><item><title>Pibrary</title><link>https://www.amania-tools.com/p/pibrary/</link><pubDate>Sat, 31 Dec 2022 15:14:55 +0900</pubDate><guid>https://www.amania-tools.com/p/pibrary/</guid><description>&lt;img src="https://github.com/amania-Jailbreak/amania-jailbreak.github.io/raw/master/Pibrary-Hed.png" alt="Featured image of post Pibrary" />&lt;p>PibraryとはPythonで作成されたビルドされていないOSSソフトウェアを動かすためのソフトになります
Pibraryを使用すれば&lt;/p>
&lt;ul>
&lt;li>Pythonでビルド(exeにコンパイル)などをせずに配布することができます&lt;/li>
&lt;li>Pythonの仮想環境もどきが作れます(アプリケーションごとに環境が生成されその中にモジュールがインストールされます 仮想環境のみでは使用できません)&lt;/li>
&lt;/ul>
&lt;p>PibraryにはPython3.10 pipが同梱されておりモジュールは標準の状態から手を加えておらず
Pibraryに必要なモジュールは別の場所に隔離されていますのでPythonにほかのモジュールはインストールされていません&lt;/p>
&lt;h2 id="仕組み">仕組み&lt;/h2>
&lt;p>PibraryはEelとElectronによって実現しています
.pa拡張子をアプリ内で指定しインストールするとpaの中にあるtxtファイルからモジュールをそのアプリ専用のフォルダにインストールしアプリを実行するときはそこからモジュールをインポートするように指定しますインストールしたフォルダ内にあるmain.pyのmain関数を実行します(main関数はなくても大丈夫ですがPibrary内部でエラーが発生します 支障はありません)
(Pibrary本体もビルドされていないため簡略化した方法で同じように起動します)&lt;/p>
&lt;h2 id="paファイル">paファイル&lt;/h2>
&lt;p>Pibraryにpaファイルを使用してアプリケーションをインストールします&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">[appname].pa
|- [app-identifier] (appfoldername)
|- appinfo.ini (App information)
|- requirements.txt (Required modules)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>このようなフォルダ構造になっておりapp-identifierにはappinfoに記述したidentifierと同じ名前にします この中にアプリ本体を配置しモジュールとアプリ情報を記載しzip形式で圧縮して.pa拡張子にします&lt;/p>
&lt;h2 id="appinfoini">appinfo.ini&lt;/h2>
&lt;p>Pibraryがアプリを管理するためにインストール時に読み取る情報が書かれているファイルです&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">[識別子]
name = アプリ名
developer = 開発者名
description = 詳細
icon = iconURL
identifier = 識別子
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="download">Download&lt;/h2>
&lt;h3 id="pibrary-public-betapb">Pibrary public beta(PB)&lt;/h3>
&lt;p>&lt;a class="link" href="https://bowlroll.net/file/287289" target="_blank" rel="noopener"
>Download Ver 1.0PB&lt;/a>&lt;/p>
&lt;h3 id="pibrary-stable">Pibrary stable&lt;/h3>
&lt;p>しばらくお待ちください&lt;/p></description></item></channel></rss>